import json

# Ã–ÄŸrencilerin bilgilerini tutmak iÃ§in boÅŸ bir liste
veritabani = []

# Yeni Ã¶ÄŸrenci ekleme
def ogrenci_ekle():
    """KullanÄ±cÄ±dan Ã¶ÄŸrenci bilgilerini alÄ±r ve kayÄ±t oluÅŸturur."""
    print("\n=== Yeni Ã–ÄŸrenci KaydÄ± ===")
    isim = input("Ã–ÄŸrenci AdÄ±: ").strip().capitalize()
    soyisim = input("Ã–ÄŸrenci SoyadÄ±: ").strip().capitalize()

    # Ã–ÄŸrenci numarasÄ± giriÅŸi ve kontrolÃ¼
    while True:
        try:
            numara = int(input("Ã–ÄŸrenci NumarasÄ± (3 Haneli): "))
            if 100 <= numara <= 999 and not numara_var_mi(numara):
                break
            print("HatalÄ± giriÅŸ! Numara benzersiz ve 3 haneli olmalÄ±.")
        except ValueError:
            print("LÃ¼tfen geÃ§erli bir sayÄ± giriniz.")

    # Ders ve not giriÅŸleri
    notlar = {}
    en_az_bir_ders = False
    while True:
        ders = input("Ders adÄ± (Ã‡Ä±kmak iÃ§in '0' yazÄ±n): ").strip().capitalize()
        if ders == "0":
            if en_az_bir_ders:
                break
            else:
                print("En az bir ders eklemek zorundasÄ±nÄ±z.")
                continue
        elif ders:
            while True:
                try:
                    puan = int(input(f"{ders} notu (0-100): "))
                    if 0 <= puan <= 100:
                        notlar[ders] = puan
                        en_az_bir_ders = True
                        break
                    else:
                        print("Not 0 ile 100 arasÄ±nda olmalÄ±dÄ±r.")
                except ValueError:
                    print("LÃ¼tfen geÃ§erli bir sayÄ± giriniz.")
        else:
            print("Ders adÄ± boÅŸ olamaz.")

    # KayÄ±t ekleme
    veritabani.append({"isim": isim, "soyisim": soyisim, "numara": numara, "notlar": notlar})
    print("Ã–ÄŸrenci baÅŸarÄ±yla eklendi.")

# KayÄ±tlarÄ± listeleme
def kayitlari_goster():
    """KayÄ±tlÄ± Ã¶ÄŸrencilerin bilgilerini ekrana yazdÄ±rÄ±r."""
    print("\n=== KayÄ±tlÄ± Ã–ÄŸrenciler ===")
    if not veritabani:
        print("HenÃ¼z kayÄ±tlÄ± Ã¶ÄŸrenci yok.")
        return
    for kayit in veritabani:
        print(f"Ad: {kayit['isim']} {kayit['soyisim']}, Numara: {kayit['numara']}")
        print("  Notlar:")
        if kayit["notlar"]:
            for ders, puan in kayit["notlar"].items():
                print(f"    {ders}: {puan}")
        else:
            print("    Not bilgisi yok.")
        print("-" * 30)

# Not istatistiklerini hesaplama
def istatistikleri_hesapla():
    """NotlarÄ± analiz ederek istatistikleri ekrana yazdÄ±rÄ±r."""
    print("\n=== Not Ä°statistikleri ===")
    tum_notlar = []
    for kayit in veritabani:
        tum_notlar.extend(kayit["notlar"].values())
    if not tum_notlar:
        print("HenÃ¼z not bilgisi girilmemiÅŸ.")
        return

    en_yuksek = max(tum_notlar)
    en_dusuk = min(tum_notlar)
    ortalama = sum(tum_notlar) / len(tum_notlar)

    print(f"En YÃ¼ksek Not: {en_yuksek}")
    print(f"En DÃ¼ÅŸÃ¼k Not: {en_dusuk}")
    print(f"SÄ±nÄ±f OrtalamasÄ±: {ortalama:.2f}")

# Ã–ÄŸrenci numarasÄ±nÄ± kontrol etme
def numara_var_mi(ogrenci_numarasi):
    """Girilen Ã¶ÄŸrenci numarasÄ±nÄ±n kayÄ±tlÄ± olup olmadÄ±ÄŸÄ±nÄ± kontrol eder."""
    for kayit in veritabani:
        if kayit["numara"] == ogrenci_numarasi:
            return True
    return False

# MenÃ¼ GÃ¶sterimi
def menu_goster():
    """Ana menÃ¼yÃ¼ ekrana yazdÄ±rÄ±r."""
    print("\n==== Ã–ÄŸrenci YÃ¶netim Sistemi ====")
    print("ğŸ“Œ 1. Ã–ÄŸrenci Ekle")
    print("ğŸ“Œ 2. KayÄ±tlarÄ± GÃ¶r")
    print("ğŸ“Œ 3. Not Ä°statistikleri")
    print("ğŸ“Œ 4. Programdan Ã‡Ä±k")

# Program DÃ¶ngÃ¼sÃ¼
while True:
    menu_goster()
    secim = input("Bir seÃ§im yapÄ±nÄ±z: ").strip()
    if secim == "1":
        ogrenci_ekle()
    elif secim == "2":
        kayitlari_goster()
    elif secim == "3":
        istatistikleri_hesapla()
    elif secim == "4":
        print("Programdan Ã§Ä±kÄ±lÄ±yor...")
        break
    else:
        print("GeÃ§ersiz seÃ§im, lÃ¼tfen tekrar deneyiniz.")
